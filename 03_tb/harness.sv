`timescale 1ns/1ps

//Read configuration from file which is generated by RM
`include "rs_dec_cfg.svh" 
`include "uvm_pkg.sv" 
`include "src_tc_fl.svh" 
 


module harness;
import uvm_pkg::*;  
`include "uvm_macros.svh"  
`include "../03_tb/test_collection.sv"
`include "../03_tb/rs_decoder_if.sv"  

// clk generate
parameter CLK_PRD = 10;
logic clk = 0;
initial begin
    forever begin
        #(CLK_PRD/2 ) clk = ~clk;
    end
end

//rst generate
parameter dummy_time = 14;
logic rst_n ;
initial begin
    #dummy_time;
    rst_n = 1;
    #CLK_PRD;
    rst_n = 0;
    #(CLK_PRD*1.5);
    rst_n = 1; 
    
end


//interface 
rs_decoder_if u_dut_if();
assign u_dut_if.clk = clk;
assign u_dut_if.rst_n = rst_n;

//DUT inst
 
 
// rs_decoder #(
// .SYM_BW(`SYM_BW),
// .N_NUM(`N_NUM),
// .R_NUM(`R_NUM)
// ) 
// DUT(
// .clk            (u_dut_if.clk            ),
// .rst_n          (u_dut_if.rst_n          ),
// .din_val        (u_dut_if.din_val        ),
// .din_sop        (u_dut_if.din_sop        ),
// .din_eop        (u_dut_if.din_eop        ),
// .din            (u_dut_if.din            ),
           
// .symb_out_cnt    ( u_dut_if.symb_out_cnt   ),
// .symb_out_val    ( u_dut_if.symb_out_val   ),
// .symb_corrected  ( u_dut_if.symb_corrected ), 
      

// .busy           (  )
 // );             

 
rs_dec_ip #(
// .SYM_BW(`SYM_BW),
// .N_NUM(`N_NUM),
// .R_NUM(`R_NUM)
) 
DUT(
.clk            (u_dut_if.clk            ),
.rst_n          (u_dut_if.rst_n          ),
.din_val        (u_dut_if.din_val        ),
.din_sop        (u_dut_if.din_sop        ),
.din_eop        (u_dut_if.din_eop        ),
.din            (u_dut_if.din            ),
.sym_width      (u_dut_if.sym_width            ),
           
.symb_out_cnt    ( u_dut_if.symb_out_cnt   ),
.symb_out_val    ( u_dut_if.symb_out_val   ),
.symb_corrected  ( u_dut_if.symb_corrected ) 
      

// .busy           (  )
 );
 

initial begin

  run_test();
end

initial begin
$fsdbDumpfile("wave.fsdb");
$fsdbDumpvars(0,DUT);
// $fsdbDumpMemNow(DUT.u_kes.theta);
// $fsdbDumpMem(DUT.u_kes.theta, , ,CLK_PRD);
// $fsdbDumpMem(DUT.u_kes.gammaxdelta, , ,CLK_PRD);
// $fsdbDumpMemNow(DUT.u_kes.deltaxtheta, , ,CLK_PRD);
end  


smp_if #(.DW( `SYM_BW)) u0_smp_if(
.data     (DUT.din),
.data_vld (DUT.din_val),
.clk      (DUT.clk),
.rst_n    (DUT.rst_n),
.smp_en   (1'b1),
.out_file ("DUT_dec/data_decoder_in.txt")
);


smp_if #(.DW( `SYM_BW)) u1_smp_if(
.data     (DUT.symb_corrected),
.data_vld (DUT.symb_out_val),
.clk      (DUT.clk),
.rst_n    (DUT.rst_n),
.smp_en   (1'b1),
.out_file ("DUT_dec/data_decoder_out.txt")
); 


endmodule